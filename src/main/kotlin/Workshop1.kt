package org.example

// Workshop #1: Simple Console Application - Unit Converter

fun main() {
    // 2. ‡πÉ‡∏ä‡πâ while (true) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ß‡∏ô‡∏ã‡πâ‡∏≥
    while (true) {
        // 1. ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
        println("===== Unit Converter =====")
        println("‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á:")
        println("1. Celsius to Fahrenheit")
        println("2. Kilometers to Miles")
        println("‡∏û‡∏¥‡∏°‡∏û‡πå 'exit' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°")
        print("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π (1, 2, or exit): ")

        // 2. ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        val choice = readln()

        // 3. ‡∏Ñ‡∏∏‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏î‡πâ‡∏ß‡∏¢ when expressionüö®
        when (choice) {
            "1" -> convertCelsiusToFahrenheit()
            "2" -> convertKilometersToMiles()
            "exit" -> {
                println("‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡πÅ‡∏•‡πâ‡∏ß")
                println("‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ô‡∏Ñ‡πà‡∏≤")

                return
            }
            else -> println(" ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏´‡∏°‡πà")
        }
        println()
    }
}

// 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏¢‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡∏´‡∏ô‡πà‡∏ß‡∏¢ Celsius to Fahrenheit üö®
// **‡∏™‡∏π‡∏ï‡∏£ celsius * 9.0 / 5.0 + 32
fun celsiusToFahrenheit(celsius: Double): Double {
    return celsius * 9.0 / 5.0 + 32
}

// 4. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏¢‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡∏´‡∏ô‡πà‡∏ß‡∏¢ Kilometers to Miles
// ‡∏™‡∏π‡∏ï‡∏£: kilometers * 0.621371
fun kilometersToMiles(kilometers: Double): Double {
    return kilometers * 0.621371
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á Celsius to Fahrenheit ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
fun convertCelsiusToFahrenheit() {
    print("‡∏õ‡πâ‡∏≠‡∏ô‡∏Ñ‡πà‡∏≤‡∏≠‡∏á‡∏®‡∏≤‡πÄ‡∏ã‡∏•‡πÄ‡∏ã‡∏µ‡∏¢‡∏™ (Celsius): ")
    val input = readln()

    // 5. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Null Safety ‡∏î‡πâ‡∏ß‡∏¢ toDoubleOrNull() ‡πÅ‡∏•‡∏∞ Elvis operator (?:)üö®
    val celsius = input.toDoubleOrNull() ?: run {
        println("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç")
        return
    }

    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô celsiusToFahrenheit()üö®
    val fahrenheitResult = celsiusToFahrenheit(celsius)

    // 6. ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå ‡πÉ‡∏ä‡πâ String format ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏° 2 ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
    println("‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå: $celsius ¬∞C ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö ${"%.2f".format(fahrenheitResult)} ¬∞F")
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á Kilometers to Miles ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏îüö®
fun convertKilometersToMiles() {
    print("‡∏õ‡πâ‡∏≠‡∏ô‡∏Ñ‡πà‡∏≤‡∏Å‡∏¥‡πÇ‡∏•‡πÄ‡∏°‡∏ï‡∏£ (Kilometers): ")
    val input = readln()

    // 5. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Null Safety ‡∏î‡πâ‡∏ß‡∏¢ toDoubleOrNull() ‡πÅ‡∏•‡∏∞ Elvis operator (?:)üö®
    val kilometers = input.toDoubleOrNull() ?: run {
        println("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç")
        return
    }

    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô kilometersToMiles()üö®
    val milesResult = kilometersToMiles(kilometers)

    // outputüö®
    println("‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå: $kilometers km ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö ${"%.2f".format(milesResult)} miles")

}
